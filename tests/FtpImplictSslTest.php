<?php
namespace dadasign\FtpImplictSsl;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-20 at 15:05:04.
 */
class FtpImplictSslTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var FtpImplictSsl
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        //__construct( $username, $password, $server, $port = 990, $initial_path = '', $passive_mode = false )
        $this->object = new FtpImplictSsl(FTP_LOGIN,FTP_PASS,FTP_HOST,FTP_PORT,'',FTP_PASSIVE);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers dadasign\FtpImplictSsl\FtpImplictSsl::upload
     * @todo   Implement testUpload().
     */
    public function testUpload()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers dadasign\FtpImplictSsl\FtpImplictSsl::ftplist
     */
    public function testFtpList()
    {
        $files = $this->object->ftpList();
        var_dump($files);
        $this->assertNotEmpty($files);
        $this->assertContains(EXPECTED_FILE, $files);
    }

    /**
     * @covers dadasign\FtpImplictSsl\FtpImplictSsl::download
     */
    public function testGet()
    {
        $localFilename = 'tests/test.data';
        $this->object->get($localFilename,EXPECTED_FILE);
        $is_file = is_file($localFilename);
        if($is_file){
            unlink($localFilename);
        }
        $this->assertTrue($is_file,'File was downloaded.');
    }

    /**
     * @covers dadasign\FtpImplictSsl\FtpImplictSsl::remote_file_size
     * @todo   Implement testRemote_file_size().
     */
    public function testRemoteFileSize()
    {
        $size = $this->object->remoteFileSize(EXPECTED_FILE);
        $this->assertGreaterThanOrEqual(MIN_EXPECTED_FILE_SIZE, $size);
    }

    /**
     * @covers dadasign\FtpImplictSsl\FtpImplictSsl::delete
     * @todo   Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
